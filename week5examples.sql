-- If set A = {L M N O P} and set B = {P Q R S T}, what sets are generated by the following operations?

DROP TABLE IF EXISTS a, b;
CREATE TABLE a (text varchar(1));
CREATE TABLE b (text varchar(1));

INSERT INTO a (text) VALUES ('L'),('M'),('N'),('O'),('P');
INSERT INTO b (text) VALUES ('P'),('Q'),('R'),('S'),('T');

-- 1
-- A UNION B
SELECT text FROM a
UNION
SELECT text FROM b;
-- [L,M,N,O,P,Q,R,S,T]

-- 2
-- A UNION ALL B
SELECT text FROM a
UNION ALL
SELECT text FROM b;
-- [L,M,N,O,P,P,Q,R,S,T]


-- 3 
-- A INTERSECT B
WITH result AS
(SELECT a.text AS set_a
,       b.text AS set_b
FROM    a INNER JOIN b
ON      a.text = b.text)
SELECT  result.set_a AS text
FROM    result
UNION
SELECT  result.set_b AS text
FROM    result;
-- [P]


-- 4.
-- A EXCEPT B
SELECT a.text
FROM   a
WHERE  NOT EXISTS
	   (SELECT b.text FROM b WHERE a.text = b.text);
-- [L,M,N,O]

-- 5. Write a compound query that finds the first and last names of all actors and customers whose last name starts with L.
SELECT * FROM
(SELECT a.first_name, a.last_name
FROM actor a
UNION
SELECT c.first_name, c.last_name
FROM customer c) A
WHERE last_name LIKE 'L%';

-- 6. Sort the results from Exercise 6-2 by the last_name column.
SELECT * FROM
(SELECT a.first_name, a.last_name
FROM actor a
UNION
SELECT c.first_name, c.last_name
FROM customer c) A
WHERE last_name LIKE 'L%'
ORDER BY last_name;

-- 7. Write a compound query that finds the id and name of all cities
--    and countries that have a name starting with an 'S', containing an 'o' ,
--    and ending with an 'a'.
SELECT ct.city_id AS id, ct.city AS name
FROM city ct
WHERE ct.city LIKE 'S%o%a'
UNION ALL
SELECT c.country_id AS id, c.country AS name
FROM country c
WHERE c.country LIKE 'S%o%a'
ORDER BY name;

-- 8. Write a compound query that finds the id and name of all cities
--    and countries that have a name starting with an 'S', containing an 'o' ,
--    and ending with an 'a' in descending order by city name.
SELECT ct.city_id AS id, ct.city AS name
FROM city ct
WHERE ct.city LIKE 'S%o%a'
UNION ALL
SELECT c.country_id AS id, c.country AS name
FROM country c
WHERE c.country LIKE 'S%o%a'
ORDER BY name DESC;

-- 9. Write a compound query. The first query finds the first_name and last_name columns
--    in the actor table and the first_name begins with an 'M' and the title begins with 'LOVE'.
--    The second query returns the same but the last_name begins with a 'W' and the title begins with 'LIFE'
--    Order by last_name.
SELECT a.first_name, a.last_name, f.title
FROM   actor a INNER JOIN film_actor fa
ON     a.actor_id = fa.actor_id INNER JOIN film f
ON     fa.film_id = f.film_id
WHERE  a.first_name LIKE 'M%'
AND    f.title LIKE 'LOVE%'
UNION
SELECT a.first_name, a.last_name, f.title
FROM   actor a INNER JOIN film_actor fa
ON     a.actor_id = fa.actor_id INNER JOIN film f
ON     fa.film_id = f.film_id
WHERE  a.last_name LIKE 'W%'
AND    f.title LIKE 'LIFE%'
ORDER BY last_name;

-- 10. Write a compound query. The first query will return the last_name of the actor,
--     the title of the film that begins with 'LOVE' and the first_name begins with an 'M'.
--     The second query will return the last name of the actor, the title of the film that begins with 'LIFE'
--     and the first_name begins with a 'W'. Order by last_name.
SELECT a.last_name, f.title
FROM   actor a INNER JOIN film_actor fa
ON     a.actor_id = fa.actor_id INNER JOIN film f
ON     fa.film_id = f.film_id
WHERE  a.first_name LIKE 'M%'
AND    f.title LIKE 'LOVE%'
UNION
SELECT a.last_name, f.title
FROM   actor a INNER JOIN film_actor fa
ON     a.actor_id = fa.actor_id INNER JOIN film f
ON     fa.film_id = f.film_id
WHERE  a.last_name LIKE 'W%'
AND    f.title LIKE 'LIFE%'
ORDER BY last_name;